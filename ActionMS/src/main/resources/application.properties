spring.application.name=ActionMS

server.port=8082
spring.datasource.url=jdbc:mysql://localhost:3306/actions?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true
# Docker spring.datasource.url=jdbc:mysql://mysqldb/actionDB?serverTimezone=UTC&createDatabaseIfNotExist=true
#spring.datasource.url=jdbc:mysql://action-db:3306/actionDB?serverTimezone=UTC&createDatabaseIfNotExist=true

spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#enables the logging of SQL statements to the console
spring.jpa.show-sql=true

spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=kafka-service:9092
spring.kafka.admin.auto-create=true
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.bootstrap-servers=kafka:9093

kafka.topic.name=jobs-queue

metric.service.url=http://localhost:8083/metrics
